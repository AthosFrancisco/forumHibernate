package model;
// Generated 01/07/2017 07:18:32 by Hibernate Tools 4.3.1

import java.io.Serializable;
import java.util.Date;
import java.util.List;
import javax.persistence.*;
import org.json.JSONObject;

/**
 * Pergunta generated by hbm2java
 */
@Entity
@Access(AccessType.FIELD)
public class Pergunta implements Serializable {

    public void setNomeUsuario(String nomeUsuario) {
        this.nomeUsuario = nomeUsuario;
    }

    public Pergunta(){}
    
    public Pergunta(int id){
        this.id = id;
    }
    
    public Pergunta(Date dataPostagem, String periodo, String materia, String textoPergunta) {
        this.dataPostagem = dataPostagem;
        this.periodo = periodo;
        this.materia = materia;
        this.textoPergunta = textoPergunta;
    }
    
    public Pergunta(String periodo, String materia, String textoPergunta) {
        this.periodo = periodo;
        this.materia = materia;
        this.textoPergunta = textoPergunta;
    }
    
    public JSONObject getJSONObject(){
        JSONObject a = new JSONObject();
        
        a.put("id", id);
        a.put("dataPostagem", dataPostagem);
        a.put("dataUltimaAlteracao", dataUltimaAlteracao);
        a.put("periodo", periodo);
        a.put("materia", materia);
        a.put("textoPergunta", textoPergunta);
        a.put("nomeUsuario", usuario.getNome());
        a.put("editar", editar);
        a.put("excluir", excluir);
        
        return a;
    }
    
    @Transient
    private String excluir = "";
    @Transient
    private String editar = "";
    
    @Id
    @SequenceGenerator(name = "seq_perg", allocationSize = 20, initialValue = 1)
    @GeneratedValue(generator = "seq_perg", strategy = GenerationType.AUTO)
    private Integer id;
    @Column(nullable = false)
    @Temporal(TemporalType.TIMESTAMP)
    private Date dataPostagem;
    @Column(nullable = true)
    @Temporal(TemporalType.TIMESTAMP)
    private Date dataUltimaAlteracao;
    @Column(nullable = false)
    private String periodo;
    @Column(nullable = false)
    private String materia;
    @Column(nullable = false)
    private String textoPergunta;
    
    @OneToMany(mappedBy = "pergunta", fetch = FetchType.LAZY, cascade = CascadeType.ALL, orphanRemoval = false)
    private List<Resposta> respostas;
    
    @Transient
    private String nomeUsuario;
    
    @ManyToOne(fetch = FetchType.LAZY, optional = false)
    private Usuario usuario;

    public Integer getId() {
        return id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    public Date getDataPostagem() {
        return dataPostagem;
    }

    public void setDataPostagem(Date dataPostagem) {
        this.dataPostagem = dataPostagem;
    }

    public String getPeriodo() {
        return periodo;
    }

    public void setPeriodo(String periodo) {
        this.periodo = periodo;
    }

    public String getMateria() {
        return materia;
    }

    public void setMateria(String materia) {
        this.materia = materia;
    }

    public String getTextoPergunta() {
        return textoPergunta;
    }

    public void setTextoPergunta(String textoPergunta) {
        this.textoPergunta = textoPergunta;
    }

    public List<Resposta> getRespostas() {
        return respostas;
    }

    public void setRespostas(List<Resposta> respostas) {
        this.respostas = respostas;
    }

    public String getNomeUsuario() {
        return usuario.getNome();
    }

    public Usuario getUsuario() {
        return usuario;
    }

    public void setUsuario(Usuario usuario) {
        this.usuario = usuario;
    }

    public String getExcluir() {
        return excluir;
    }

    public void setExcluir(String excluir) {
        this.excluir = excluir;
    }

    public String getEditar() {
        return editar;
    }

    public void setEditar(String editar) {
        this.editar = editar;
    }

    public Date getDataUltimaAlteracao() {
        return dataUltimaAlteracao;
    }

    public void setDataUltimaAlteracao(Date dataUltimaAlteracao) {
        this.dataUltimaAlteracao = dataUltimaAlteracao;
    }

}
